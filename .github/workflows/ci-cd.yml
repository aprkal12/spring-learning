name: CI/CD with Docker and EC2

on:
  push:
    branches:
      - main  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build -x test
        env:
          ORACLE_URL: ${{ secrets.ORACLE_URL }}
          ORACLE_USERNAME: ${{ secrets.ORACLE_USERNAME }}
          ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD }}

#          DB_URL: ${{ secrets.DB_URL }}
#          DB_USERNAME: ${{ secrets.DB_USERNAME }}
#          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/test_image:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/test_image:latest

      - name: Set environment variables on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/spring
                    
            echo "ORACLE_URL=${{ secrets.ORACLE_URL }}" > .env
            echo "ORACLE_USERNAME=${{ secrets.ORACLE_USERNAME }}" >> .env
            echo "ORACLE_PASSWORD=${{ secrets.ORACLE_PASSWORD }}" >> .env

      - name: Pull Docker image and restart container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/spring
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/test_image:latest
            sudo docker compose down
            sudo docker compose up -d  
            
      - name: Remove dangling Docker images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "Removing dangling images..."
            sudo docker images -f "dangling=true" -q | xargs -r sudo docker rmi

#            echo "MYSQL_URL=${{ secrets.MYSQL_URL }}" > .env
#            echo "MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }}" >> .env
#            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
      
